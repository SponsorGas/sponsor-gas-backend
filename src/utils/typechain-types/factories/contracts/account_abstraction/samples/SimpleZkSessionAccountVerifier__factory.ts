/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SimpleZkSessionAccountVerifier,
  SimpleZkSessionAccountVerifierInterface,
} from "../../../../contracts/account_abstraction/samples/SimpleZkSessionAccountVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[3]",
        name: "input",
        type: "uint256[3]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SimpleZkSessionAccountVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleZkSessionAccountVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleZkSessionAccountVerifier__factory extends ContractFactory {
  constructor(...args: SimpleZkSessionAccountVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleZkSessionAccountVerifier> {
    return super.deploy(
      overrides || {}
    ) as Promise<SimpleZkSessionAccountVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleZkSessionAccountVerifier {
    return super.attach(address) as SimpleZkSessionAccountVerifier;
  }
  override connect(signer: Signer): SimpleZkSessionAccountVerifier__factory {
    return super.connect(signer) as SimpleZkSessionAccountVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleZkSessionAccountVerifierInterface {
    return new utils.Interface(_abi) as SimpleZkSessionAccountVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleZkSessionAccountVerifier {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleZkSessionAccountVerifier;
  }
}
