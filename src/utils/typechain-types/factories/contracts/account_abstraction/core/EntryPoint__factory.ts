/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../contracts/account_abstraction/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "withdrawTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "withdrawTime",
            type: "uint64",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b6102338062004fb783390190565b608051614f31620000866000396000818161167a0152613a380152614f316000f3fe6080604052600436106101635760003560e01c80638f41ec5a116100c0578063bb9fe6bf11610074578063d6383f9411610059578063d6383f94146104f9578063ee21942314610519578063fc7e286d1461053957600080fd5b8063bb9fe6bf146104c4578063c23a5cea146104d957600080fd5b80639b249f69116100a55780639b249f6914610471578063a619353114610491578063b760faf9146104b157600080fd5b80638f41ec5a1461043c578063957122ab1461045157600080fd5b8063205c2878116101175780634b1d7cf5116100fc5780634b1d7cf5146102765780635287ce121461029657806370a08231146103e957600080fd5b8063205c28781461023657806335567e1a1461025657600080fd5b80631b2e01b8116101485780631b2e01b8146101ab5780631d732756146101f65780631fad948c1461021657600080fd5b80630396cb60146101785780630bd28e3b1461018b57600080fd5b366101735761017133610617565b005b600080fd5b610171610186366004613dbe565b610692565b34801561019757600080fd5b506101716101a6366004613e11565b610a17565b3480156101b757600080fd5b506101e36101c6366004613e59565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020257600080fd5b506101e36102113660046140ad565b610a5f565b34801561022257600080fd5b506101716102313660046141b8565b610c12565b34801561024257600080fd5b5061017161025136600461420f565b610d8f565b34801561026257600080fd5b506101e3610271366004613e59565b610f91565b34801561028257600080fd5b506101716102913660046141b8565b61100c565b3480156102a257600080fd5b506103886102b136600461423b565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604091829020825160a08101845281546dffffffffffffffffffffffffffff80821683526e010000000000000000000000000000820460ff161515948301949094526f0100000000000000000000000000000090049092169282019290925260019091015463ffffffff81166060830152640100000000900467ffffffffffffffff16608082015290565b6040805182516dffffffffffffffffffffffffffff908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015167ffffffffffffffff169181019190915260a0016101ed565b3480156103f557600080fd5b506101e361040436600461423b565b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020546dffffffffffffffffffffffffffff1690565b34801561044857600080fd5b506101e3600181565b34801561045d57600080fd5b5061017161046c366004614258565b6114e2565b34801561047d57600080fd5b5061017161048c3660046142dd565b61163a565b34801561049d57600080fd5b506101e36104ac366004614338565b611741565b6101716104bf36600461423b565b610617565b3480156104d057600080fd5b50610171611783565b3480156104e557600080fd5b506101716104f436600461423b565b611939565b34801561050557600080fd5b5061017161051436600461436d565b611c3d565b34801561052557600080fd5b50610171610534366004614338565b611d6b565b34801561054557600080fd5b506105c861055436600461423b565b600060208190529081526040902080546001909101546dffffffffffffffffffffffffffff808316926e010000000000000000000000000000810460ff16926f010000000000000000000000000000009091049091169063ffffffff811690640100000000900467ffffffffffffffff1685565b604080516dffffffffffffffffffffffffffff96871681529415156020860152929094169183019190915263ffffffff16606082015267ffffffffffffffff909116608082015260a0016101ed565b61062181346120d3565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020818152604091829020805492516dffffffffffffffffffffffffffff909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff8216610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff908116908316101561078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d6500000000604482015260640161070a565b80546000906107be9034906f0100000000000000000000000000000090046dffffffffffffffffffffffffffff166143fe565b90506000811161082a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b65207370656369666965640000000000000000000000000000604482015260640161070a565b6dffffffffffffffffffffffffffff8111156108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f77000000000000000000000000000000000000604482015260640161070a565b6040805160a08101825283546dffffffffffffffffffffffffffff90811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a9020985189549551945189166f01000000000000000000000000000000027fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff9515156e010000000000000000000000000000027fffffffffffffffffffffffffffffffffff0000000000000000000000000000009097169190991617949094179290921695909517865551949092018054925167ffffffffffffffff16640100000000027fffffffffffffffffffffffffffffffffffffffff000000000000000000000000909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0190610a0a908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b33600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff851684529091528120805491610a5783614411565b919050555050565b6000805a9050333014610ace576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c79000000000000000000604482015260640161070a565b8451604081015160608201518101611388015a1015610b11577fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b875160009015610bb2576000610b2e846000015160008c866121d0565b905080610bb0576000610b426108006121e8565b805190915015610baa57846000015173ffffffffffffffffffffffffffffffffffffffff168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201876020015184604051610ba19291906144b7565b60405180910390a35b60019250505b505b600088608001515a8603019050610c046000838b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250612214915050565b9a9950505050505050505050565b610c1a6125f2565b8160008167ffffffffffffffff811115610c3657610c36613e8e565b604051908082528060200260200182016040528015610c6f57816020015b610c5c613d1a565b815260200190600190039081610c545790505b50905060005b82811015610ce8576000828281518110610c9157610c916144d0565b60200260200101519050600080610ccc848a8a87818110610cb457610cb46144d0565b9050602002810190610cc691906144ff565b85612663565b91509150610cdd84838360006128a7565b505050600101610c75565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b83811015610d7257610d6681888884818110610d3557610d356144d0565b9050602002810190610d4791906144ff565b858481518110610d5957610d596144d0565b6020026020010151612afc565b90910190600101610d17565b50610d7d8482612c81565b505050610d8a6001600255565b505050565b33600090815260208190526040902080546dffffffffffffffffffffffffffff16821115610e19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c6172676500000000000000604482015260640161070a565b8054610e369083906dffffffffffffffffffffffffffff1661453d565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161781556040805173ffffffffffffffffffffffffffffffffffffffff851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a260008373ffffffffffffffffffffffffffffffffffffffff168360405160006040518083038185875af1925050503d8060008114610f1b576040519150601f19603f3d011682016040523d82523d6000602084013e610f20565b606091505b5050905080610f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f2077697468647261770000000000000000000000000000604482015260640161070a565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915290819020549082901b7fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016175b92915050565b6110146125f2565b816000805b8281101561120d5736868683818110611034576110346144d0565b90506020028101906110469190614550565b90503660006110558380614584565b9092509050600061106c604085016020860161423b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff82160161110d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f72000000000000000000604482015260640161070a565b73ffffffffffffffffffffffffffffffffffffffff8116156111ea5773ffffffffffffffffffffffffffffffffffffffff811663e3563a4f848461115460408901896145ec565b6040518563ffffffff1660e01b81526004016111739493929190614802565b60006040518083038186803b15801561118b57600080fd5b505afa92505050801561119c575060015b6111ea576040517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161070a565b6111f482876143fe565b955050505050808061120590614411565b915050611019565b5060008167ffffffffffffffff81111561122957611229613e8e565b60405190808252806020026020018201604052801561126257816020015b61124f613d1a565b8152602001906001900390816112475790505b506040519091507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a16000805b8481101561137757368888838181106112ae576112ae6144d0565b90506020028101906112c09190614550565b90503660006112cf8380614584565b909250905060006112e6604085016020860161423b565b90508160005b8181101561135e576000898981518110611308576113086144d0565b6020026020010151905060008061132b8b898987818110610cb457610cb46144d0565b9150915061133b848383896128a7565b8a61134581614411565b9b5050505050808061135690614411565b9150506112ec565b505050505050808061136f90614411565b915050611293565b50600080915060005b8581101561149d573689898381811061139b5761139b6144d0565b90506020028101906113ad9190614550565b90506113bf604082016020830161423b565b73ffffffffffffffffffffffffffffffffffffffff167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a236600061140e8380614584565b90925090508060005b818110156114855761145988858584818110611435576114356144d0565b905060200281019061144791906144ff565b8b8b81518110610d5957610d596144d0565b61146390886143fe565b96508761146f81614411565b985050808061147d90614411565b915050611417565b5050505050808061149590614411565b915050611380565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a26114d38682612c81565b5050505050610d8a6001600255565b83158015611505575073ffffffffffffffffffffffffffffffffffffffff83163b155b1561156c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f79656400000000000000604482015260640161070a565b601481106115fe57600061158360148284866148b9565b61158c916148e3565b60601c9050803b6000036115fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f7965640000000000604482015260640161070a565b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526000602482015260440161070a565b6040517f570e1a3600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906116b1908690869060040161492b565b6020604051808303816000875af11580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f4919061493f565b6040517f6ca7b80600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015290915060240161070a565b600061174c82612dc8565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff9091169003611809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b656400000000000000000000000000000000000000000000604482015260640161070a565b80546e010000000000000000000000000000900460ff16611886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e67000000000000000000000000000000604482015260640161070a565b600181015460009061189e9063ffffffff164261495c565b6001830180547fffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffff1665ffffffffffff831664010000000081029190911790915583547fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff16845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610686565b33600090815260208190526040902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff16806119d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f207769746864726177000000000000000000000000604482015260640161070a565b6001820154640100000000900467ffffffffffffffff16611a51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b652829206669727374000000604482015260640161070a565b60018201544264010000000090910467ffffffffffffffff161115611ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f74206475650000000000604482015260640161070a565b6001820180547fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016905581547fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff1682556040805173ffffffffffffffffffffffffffffffffffffffff851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a260008373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611bcd576040519150601f19603f3d011682016040523d82523d6000602084013e611bd2565b606091505b5050905080610f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b650000000000000000604482015260640161070a565b611c45613d1a565b611c4e85612de1565b600080611c5d60008885612663565b915091506000611c6d8383612ed4565b9050611c7843600052565b6000611c8660008a87612afc565b9050611c9143600052565b6000606073ffffffffffffffffffffffffffffffffffffffff8a1615611d21578973ffffffffffffffffffffffffffffffffffffffff168989604051611cd8929190614982565b6000604051808303816000865af19150503d8060008114611d15576040519150601f19603f3d011682016040523d82523d6000602084013e611d1a565b606091505b5090925090505b8660800151838560200151866040015185856040517f8b7ac98000000000000000000000000000000000000000000000000000000000815260040161070a96959493929190614992565b611d73613d1a565b611d7c82612de1565b600080611d8b60008585612663565b845160a001516040805180820182526000808252602080830182815273ffffffffffffffffffffffffffffffffffffffff958616835282825284832080546dffffffffffffffffffffffffffff6f01000000000000000000000000000000918290048116875260019283015463ffffffff9081169094528d51518851808a018a5287815280870188815291909a16875286865288872080549390930490911689529101549091169052835180850190945281845283015293955091935090366000611e5960408a018a6145ec565b909250905060006014821015611e70576000611e8b565b611e7e6014600084866148b9565b611e87916148e3565b60601c5b6040805180820182526000808252602080830182815273ffffffffffffffffffffffffffffffffffffffff861683529082905292902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1682526001015463ffffffff1690915290915093505050506000611f098686612ed4565b90506000816000015190506000600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff168152602001611fa08c6060015190565b9052905073ffffffffffffffffffffffffffffffffffffffff831615801590611fe0575073ffffffffffffffffffffffffffffffffffffffff8316600114155b156120995760408051808201825273ffffffffffffffffffffffffffffffffffffffff851680825282518084018452600080825260208083018281529382528181529085902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1683526001015463ffffffff169092529082015290517ffaecb4e400000000000000000000000000000000000000000000000000000000815261070a908390899089908c908690600401614a34565b808686896040517fe0cff05f00000000000000000000000000000000000000000000000000000000815260040161070a9493929190614ac1565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080549091906121189084906dffffffffffffffffffffffffffff166143fe565b90506dffffffffffffffffffffffffffff811115612192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f7700000000000000000000000000000000604482015260640161070a565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161790555050565b6000806000845160208601878987f195945050505050565b60603d828111156121f65750815b604051602082018101604052818152816000602083013e9392505050565b6000805a85519091506000908161222a82612fba565b60a083015190915073ffffffffffffffffffffffffffffffffffffffff811661225657825193506124a4565b8093506000885111156124a457868202955060028a600281111561227c5761227c614b18565b146123145760608301516040517fa9a2340900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163a9a23409916122dc908e908d908c90600401614b47565b600060405180830381600088803b1580156122f657600080fd5b5087f115801561230a573d6000803e3d6000fd5b50505050506124a4565b60608301516040517fa9a2340900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169163a9a234099161236f908e908d908c90600401614b47565b600060405180830381600088803b15801561238957600080fd5b5087f19350505050801561239b575060015b6124a4576123a7614ba7565b806308c379a00361243757506123bb614bc3565b806123c65750612439565b8b816040516020016123d89190614c6b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f220266b600000000000000000000000000000000000000000000000000000000825261070a92916004016144b7565b505b8a6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526012908201527f4141353020706f73744f70207265766572740000000000000000000000000000606082015260800190565b5a85038701965081870295508589604001511015612526578a6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a91815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b604089015186900361253885826120d3565b6000808c600281111561254d5761254d614b18565b1490508460a0015173ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f6040516125da949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b600280540361265d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161070a565b60028055565b60008060005a84519091506126788682612fea565b61268186611741565b6020860152604081015160608201516080830151171760e087013517610100870135176effffffffffffffffffffffffffffff81111561271d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f770000000000000000604482015260640161070a565b6000806127298461310a565b90506127378a8a8a84613164565b8551602087015191995091935061274e919061347a565b6127bd57896040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b6127c643600052565b60a084015160609073ffffffffffffffffffffffffffffffffffffffff16156127fb576127f68b8b8b85876134d5565b975090505b60005a87039050808b60a001351015612879578b6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b6000806128b385613798565b915091508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461295557856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526014908201527f41413234207369676e6174757265206572726f72000000000000000000000000606082015260800190565b80156129c657856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b60006129d185613798565b9250905073ffffffffffffffffffffffffffffffffffffffff811615612a5c57866040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526014908201527f41413334207369676e6174757265206572726f72000000000000000000000000606082015260800190565b8115612af357866040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560608201527f6500000000000000000000000000000000000000000000000000000000000000608082015260a00190565b50505050505050565b6000805a90506000612b0f846060015190565b905030631d732756612b2460608801886145ec565b87856040518563ffffffff1660e01b8152600401612b459493929190614cb0565b6020604051808303816000875af1925050508015612b9e575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612b9b91810190614d71565b60015b612c7557600060206000803e506000517f21522153000000000000000000000000000000000000000000000000000000008101612c4057866040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a918152604060208201819052600f908201527f41413935206f7574206f66206761730000000000000000000000000000000000606082015260800190565b600085608001515a612c52908661453d565b612c5c91906143fe565b9050612c6c886002888685612214565b94505050612c78565b92505b50509392505050565b73ffffffffffffffffffffffffffffffffffffffff8216612cfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e65666963696172790000000000000000604482015260640161070a565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114612d58576040519150601f19603f3d011682016040523d82523d6000602084013e612d5d565b606091505b5050905080610d8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e656669636961727900604482015260640161070a565b6000612dd3826137eb565b805190602001209050919050565b3063957122ab612df460408401846145ec565b612e01602086018661423b565b612e0f6101208701876145ec565b6040518663ffffffff1660e01b8152600401612e2f959493929190614d8a565b60006040518083038186803b158015612e4757600080fd5b505afa925050508015612e58575060015b612ed157612e64614ba7565b806308c379a003612ec55750612e78614bc3565b80612e835750612ec7565b805115612ec1576000816040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9291906144b7565b5050565b505b3d6000803e3d6000fd5b50565b6040805160608101825260008082526020820181905291810182905290612efa846138cb565b90506000612f07846138cb565b825190915073ffffffffffffffffffffffffffffffffffffffff8116612f2b575080515b602080840151604080860151928501519085015191929165ffffffffffff8083169085161015612f59578193505b8065ffffffffffff168365ffffffffffff161115612f75578092505b50506040805160608101825273ffffffffffffffffffffffffffffffffffffffff909416845265ffffffffffff92831660208501529116908201529250505092915050565b60c081015160e082015160009190808203612fd6575092915050565b612fe282488301613949565b949350505050565b612ff7602083018361423b565b73ffffffffffffffffffffffffffffffffffffffff16815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e08084013591830191909152610100830135908201523660006130636101208501856145ec565b909250905080156130fd5760148110156130d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e6444617461000000604482015260640161070a565b6130e76014600083856148b9565b6130f0916148e3565b60601c60a0840152610f8b565b600060a084015250505050565b60a0810151600090819073ffffffffffffffffffffffffffffffffffffffff16613135576001613138565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a8551805191925090613189898861318460408c018c6145ec565b613961565b60a082015161319743600052565b600073ffffffffffffffffffffffffffffffffffffffff82166132005773ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546dffffffffffffffffffffffffffff168881116131f9578089036131fc565b60005b9150505b606084015160208a01516040517f3a871cdd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861692633a871cdd929091613260918f918790600401614dcd565b60206040518083038160008887f1935050505080156132ba575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526132b791810190614d71565b60015b613364576132c6614ba7565b806308c379a0036132f757506132da614bc3565b806132e557506132f9565b8b816040516020016123d89190614df2565b505b8a6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526016908201527f4141323320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b955073ffffffffffffffffffffffffffffffffffffffff82166134675773ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902080546dffffffffffffffffffffffffffff16808a111561342b578c6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b81547fffffffffffffffffffffffffffffffffffff000000000000000000000000000016908a90036dffffffffffffffffffffffffffff161790555b5a85039650505050505094509492505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020908152604080832084821c808552925282208054849167ffffffffffffffff83169190856134c783614411565b909155501495945050505050565b8251606081810151909160009184811161354b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e47617300604482015260640161070a565b60a082015173ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040902080548784039291906dffffffffffffffffffffffffffff1689811015613600578c6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1663f465c77e858e8e602001518e6040518563ffffffff1660e01b815260040161367b93929190614dcd565b60006040518083038160008887f1935050505080156136da57506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526136d79190810190614e37565b60015b613784576136e6614ba7565b806308c379a00361371757506136fa614bc3565b806137055750613719565b8d816040516020016123d89190614ec3565b505b8c6040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a9181526040602082018190526016908201527f4141333320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b909e909d509b505050505050505050505050565b600080826000036137ae57506000928392509050565b60006137b9846138cb565b9050806040015165ffffffffffff164211806137e05750806020015165ffffffffffff1642105b905194909350915050565b606081356020830135600061380b61380660408701876145ec565b613d07565b9050600061381f61380660608801886145ec565b9050608086013560a087013560c088013560e08901356101008a0135600061384e6138066101208e018e6145ec565b6040805173ffffffffffffffffffffffffffffffffffffffff9c909c1660208d01528b81019a909a5260608b019890985250608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408084019190915281518084039091018152610160909201905292915050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff8116600003613907575065ffffffffffff5b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000818310613958578161395a565b825b9392505050565b8015610f8b5782515173ffffffffffffffffffffffffffffffffffffffff81163b156139f257846040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b8351606001516040517f570e1a3600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163570e1a369190613a70908890889060040161492b565b60206040518083038160008887f1158015613a8f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190613ab4919061493f565b905073ffffffffffffffffffffffffffffffffffffffff8116613b3c57856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614613bd957856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a91815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b8073ffffffffffffffffffffffffffffffffffffffff163b600003613c6257856040517f220266b600000000000000000000000000000000000000000000000000000000815260040161070a91815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000613c7160148286886148b9565b613c7a916148e3565b60601c90508273ffffffffffffffffffffffffffffffffffffffff1686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051613cf692919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b60405180910390a350505050505050565b6000604051828085833790209392505050565b6040518060a00160405280613d99604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b600060208284031215613dd057600080fd5b813563ffffffff8116811461395a57600080fd5b803577ffffffffffffffffffffffffffffffffffffffffffffffff81168114613e0c57600080fd5b919050565b600060208284031215613e2357600080fd5b61395a82613de4565b73ffffffffffffffffffffffffffffffffffffffff81168114612ed157600080fd5b8035613e0c81613e2c565b60008060408385031215613e6c57600080fd5b8235613e7781613e2c565b9150613e8560208401613de4565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810181811067ffffffffffffffff82111715613edd57613edd613e8e565b60405250565b610100810181811067ffffffffffffffff82111715613edd57613edd613e8e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715613f4857613f48613e8e565b6040525050565b600067ffffffffffffffff821115613f6957613f69613e8e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000818303610180811215613fa957600080fd5b604051613fb581613ebd565b80925061010080831215613fc857600080fd5b6040519250613fd683613ee3565b613fdf85613e4e565b83526020850135602084015260408501356040840152606085013560608401526080850135608084015261401560a08601613e4e565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f84011261407657600080fd5b50813567ffffffffffffffff81111561408e57600080fd5b6020830191508360208285010111156140a657600080fd5b9250929050565b6000806000806101c085870312156140c457600080fd5b843567ffffffffffffffff808211156140dc57600080fd5b818701915087601f8301126140f057600080fd5b81356140fb81613f4f565b6040516141088282613f04565b8281528a602084870101111561411d57600080fd5b826020860160208301376000602084830101528098505050506141438860208901613f95565b94506101a087013591508082111561415a57600080fd5b5061416787828801614064565b95989497509550505050565b60008083601f84011261418557600080fd5b50813567ffffffffffffffff81111561419d57600080fd5b6020830191508360208260051b85010111156140a657600080fd5b6000806000604084860312156141cd57600080fd5b833567ffffffffffffffff8111156141e457600080fd5b6141f086828701614173565b909450925050602084013561420481613e2c565b809150509250925092565b6000806040838503121561422257600080fd5b823561422d81613e2c565b946020939093013593505050565b60006020828403121561424d57600080fd5b813561395a81613e2c565b60008060008060006060868803121561427057600080fd5b853567ffffffffffffffff8082111561428857600080fd5b61429489838a01614064565b9097509550602088013591506142a982613e2c565b909350604087013590808211156142bf57600080fd5b506142cc88828901614064565b969995985093965092949392505050565b600080602083850312156142f057600080fd5b823567ffffffffffffffff81111561430757600080fd5b61431385828601614064565b90969095509350505050565b6000610160828403121561433257600080fd5b50919050565b60006020828403121561434a57600080fd5b813567ffffffffffffffff81111561436157600080fd5b612fe28482850161431f565b6000806000806060858703121561438357600080fd5b843567ffffffffffffffff8082111561439b57600080fd5b6143a78883890161431f565b9550602087013591506143b982613e2c565b9093506040860135908082111561415a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611006576110066143cf565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614442576144426143cf565b5060010190565b60005b8381101561446457818101518382015260200161444c565b50506000910152565b60008151808452614485816020860160208601614449565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b828152604060208201526000612fe2604083018461446d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea183360301811261453357600080fd5b9190910192915050565b81810381811115611006576110066143cf565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261453357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126145b957600080fd5b83018035915067ffffffffffffffff8211156145d457600080fd5b6020019150600581901b36038213156140a657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261462157600080fd5b83018035915067ffffffffffffffff82111561463c57600080fd5b6020019150368190038213156140a657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261468657600080fd5b830160208101925035905067ffffffffffffffff8111156146a657600080fd5b8036038213156140a657600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600061016061472a8461471085613e4e565b73ffffffffffffffffffffffffffffffffffffffff169052565b602083013560208501526147416040840184614651565b82604087015261475483870182846146b5565b925050506147656060840184614651565b85830360608701526147788382846146b5565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e08501526101008084013581860152506101206147bf81850185614651565b868403838801526147d18482846146b5565b93505050506101406147e581850185614651565b868403838801526147f78482846146b5565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b898110156148a2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18c3603018112614880578283fd5b61488c868d83016146fe565b9550506020938401939290920191600101614820565b5050505082810360208401526147f78185876146b5565b600080858511156148c957600080fd5b838611156148d657600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156149235780818660140360031b1b83161692505b505092915050565b602081526000612fe26020830184866146b5565b60006020828403121561495157600080fd5b815161395a81613e2c565b65ffffffffffff81811683821601908082111561497b5761497b6143cf565b5092915050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a08301526149d160c083018461446d565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a0850152612fe260c085018261446d565b6000610140808352614a48818401896149dd565b915050614a62602083018780518252602090810151910152565b845160608301526020948501516080830152835160a08301529284015160c0820152815173ffffffffffffffffffffffffffffffffffffffff1660e0820152908301518051610100830152909201516101209092019190915292915050565b60e081526000614ad460e08301876149dd565b9050614aed602083018680518252602090810151910152565b8351606083015260208401516080830152825160a0830152602083015160c083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060038510614b80577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84825260606020830152614b97606083018561446d565b9050826040830152949350505050565b600060033d1115614bc05760046000803e5060005160e01c5b90565b600060443d1015614bd15790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715614c1f57505050505090565b8285019150815181811115614c375750505050505090565b843d8701016020828501011115614c515750505050505090565b614c6060208286010187613f04565b509095945050505050565b7f4141353020706f73744f702072657665727465643a2000000000000000000000815260008251614ca3816016850160208701614449565b9190910160160192915050565b60006101c0808352614cc581840187896146b5565b9050845173ffffffffffffffffffffffffffffffffffffffff808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a08401526147f7818561446d565b600060208284031215614d8357600080fd5b5051919050565b606081526000614d9e6060830187896146b5565b73ffffffffffffffffffffffffffffffffffffffff8616602084015282810360408401526149d18185876146b5565b606081526000614de060608301866146fe565b60208301949094525060400152919050565b7f414132332072657665727465643a200000000000000000000000000000000000815260008251614e2a81600f850160208701614449565b91909101600f0192915050565b60008060408385031215614e4a57600080fd5b825167ffffffffffffffff811115614e6157600080fd5b8301601f81018513614e7257600080fd5b8051614e7d81613f4f565b604051614e8a8282613f04565b828152876020848601011115614e9f57600080fd5b614eb0836020830160208701614449565b6020969096015195979596505050505050565b7f414133332072657665727465643a200000000000000000000000000000000000815260008251614e2a81600f85016020870161444956fea264697066735822122003ea37ac5ca6b829e00d961ef8d88a227f3053a87d116ef73a1717e2bafa489164736f6c63430008100033608060405234801561001057600080fd5b50610213806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156101d55780818660140360031b1b83161692505b50509291505056fea2646970667358221220eaff1a217516c7f8e39eabc7e5696ed3c5e1e018ecb121278e1624fd1d83a22564736f6c63430008100033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
