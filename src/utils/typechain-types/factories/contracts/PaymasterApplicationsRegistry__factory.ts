/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PaymasterApplicationsRegistry,
  PaymasterApplicationsRegistryInterface,
} from "../../contracts/PaymasterApplicationsRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "applicationAddress",
        type: "address",
      },
    ],
    name: "ApplicationAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "applicationAddress",
        type: "address",
      },
    ],
    name: "ApplicationRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "paymasterMetadataCID",
        type: "bytes",
      },
    ],
    name: "PaymasterRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
    ],
    name: "PaymasterUnregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicationAddress",
        type: "address",
      },
    ],
    name: "addApplicationToPaymaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicationAddress",
        type: "address",
      },
    ],
    name: "isApplicationSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "paymastersMap",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "paymasterMetadataCID",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymasterAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_paymasterMetadataCID",
        type: "bytes",
      },
    ],
    name: "registerPaymaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicationAddress",
        type: "address",
      },
    ],
    name: "removeApplicationFromPaymaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
    ],
    name: "unregisterPaymaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061112b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80639f1b61a8116100505780639f1b61a8146100b2578063ac1a24c8146100dd578063cee066811461010057600080fd5b80632c9f0cbf1461007757806359b9771f1461008c578063991382201461009f575b600080fd5b61008a610085366004610d51565b610113565b005b61008a61009a366004610dd4565b610305565b61008a6100ad366004610e07565b6105b0565b6100c56100c0366004610e07565b610819565b6040516100d493929190610e29565b60405180910390f35b6100f06100eb366004610dd4565b6108de565b60405190151581526020016100d4565b61008a61010e366004610dd4565b610a2a565b73ffffffffffffffffffffffffffffffffffffffff8316610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207061796d617374657220616464726573730000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205460ff1615610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5061796d617374657220616c7265616479207265676973746572656400000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811782556003820180547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905581016102ae838583610f8d565b508373ffffffffffffffffffffffffffffffffffffffff167ff82cce1014e0c70d7314ab8573ca0043db8643139ad11983a1f8fe85080dbb8b84846040516102f79291906110a8565b60405180910390a250505050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260208190526040902060030154839116331461039a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420746865207061796d6173746572206f776e6572000000000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8316610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207061796d6173746572206164647265737300000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205460ff166104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5061796d6173746572206e6f7420726567697374657265640000000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8216610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964206170706c69636174696f6e20616464726573730000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260408083209487168084526002860190925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055519092917f6bb659049cda6d8d2a519c456748d4795f0e0abcd0ab2c3ab20d63bf5c2b8a7a91a350505050565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152602081905260409020600301548291163314610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420746865207061796d6173746572206f776e6572000000000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff82166106c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207061796d6173746572206164647265737300000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205460ff16610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5061796d6173746572206e6f7420726567697374657265640000000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168155906107aa6001830182610cd2565b5060030180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560405173ffffffffffffffffffffffffffffffffffffffff8316907fe3d4549d1cdfa67c98a8dcc98881b35f03a197cb9dbea58bfb09966f8810825590600090a25050565b6000602081905290815260409020805460018201805460ff909216929161083f90610eeb565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90610eeb565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050506003909301549192505073ffffffffffffffffffffffffffffffffffffffff1683565b600073ffffffffffffffffffffffffffffffffffffffff831661095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207061796d6173746572206164647265737300000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205460ff166109ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5061796d6173746572206e6f7420726567697374657265640000000000000000604482015260640161018c565b5073ffffffffffffffffffffffffffffffffffffffff9182166000908152602081815260408083209390941682526002909201909152205460ff1690565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152602081905260409020600301548391163314610abf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420746865207061796d6173746572206f776e6572000000000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8316610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207061796d6173746572206164647265737300000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205460ff16610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f5061796d6173746572206e6f7420726567697374657265640000000000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8216610c48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964206170706c69636174696f6e20616464726573730000000000604482015260640161018c565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260408083209487168084526002860190925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055519092917fa9f19f0cd3c046e455e5167338ca2f48e54aa9f9890c9e423316ff7b3c49d9b791a350505050565b508054610cde90610eeb565b6000825580601f10610cee575050565b601f016020900490600052602060002090810190610d0c9190610d0f565b50565b5b80821115610d245760008155600101610d10565b5090565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d4c57600080fd5b919050565b600080600060408486031215610d6657600080fd5b610d6f84610d28565b9250602084013567ffffffffffffffff80821115610d8c57600080fd5b818601915086601f830112610da057600080fd5b813581811115610daf57600080fd5b876020828501011115610dc157600080fd5b6020830194508093505050509250925092565b60008060408385031215610de757600080fd5b610df083610d28565b9150610dfe60208401610d28565b90509250929050565b600060208284031215610e1957600080fd5b610e2282610d28565b9392505050565b831515815260006020606081840152845180606085015260005b81811015610e5f57868101830151858201608001528201610e43565b5060006080828601015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c90821680610eff57607f821691505b602082108103610f38577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610f8857600081815260208120601f850160051c81016020861015610f655750805b601f850160051c820191505b81811015610f8457828155600101610f71565b5050505b505050565b67ffffffffffffffff831115610fa557610fa5610ebc565b610fb983610fb38354610eeb565b83610f3e565b6000601f84116001811461100b5760008515610fd55750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556110a1565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561105a578685013582556020948501946001909201910161103a565b5086821015611095577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010191905056fea264697066735822122032cdf302c5e66b586914bf60f001f6bdc1c4805fe989e9fa19520dc16e80523c64736f6c63430008100033";

type PaymasterApplicationsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymasterApplicationsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymasterApplicationsRegistry__factory extends ContractFactory {
  constructor(...args: PaymasterApplicationsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymasterApplicationsRegistry> {
    return super.deploy(
      overrides || {}
    ) as Promise<PaymasterApplicationsRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymasterApplicationsRegistry {
    return super.attach(address) as PaymasterApplicationsRegistry;
  }
  override connect(signer: Signer): PaymasterApplicationsRegistry__factory {
    return super.connect(signer) as PaymasterApplicationsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymasterApplicationsRegistryInterface {
    return new utils.Interface(_abi) as PaymasterApplicationsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymasterApplicationsRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PaymasterApplicationsRegistry;
  }
}
